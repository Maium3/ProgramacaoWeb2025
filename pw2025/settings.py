"""
Django settings for pw2025 project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

#comentar em todas as linhas o que elas fazem
# e adicionar as novas linhas necessárias para o cryspy forms
# e para o banco de dados postgresql na supabase (essas linhas estão no final do arquivo)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-5(mv*_x)#di8pyoa=0h4fqh2h#)-c&ll$q2#3cm&7!$k*tl3$l"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    #o que essas linhas fazem?
    # Elas ativam os aplicativos padrão do Django e o aplicativo 'paginas' que criamos
    # para que possamos usá-los em nosso projeto.
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "paginas.apps.PaginasConfig",
    #adicionar o cryspy forms e o cryspy bootstrap5
    'crispy_forms',
    'crispy_bootstrap5',
]

#configurar o cryspy com o bootstrap5
CRISPY_ALLOWED_TEMPLATE_PACK = 'bootstrap5'
CRISPY_TEMPLATE_PACK = 'bootstrap5'

# Middleware é uma série de componentes que processam requisições e respostas
# Eles são executados em ordem, e cada um pode modificar a requisição ou resposta
# ou até mesmo interromper o processamento
#por exemplo, o SecurityMiddleware adiciona cabeçalhos de segurança às respostas
#e o AuthenticationMiddleware associa usuários autenticados às requisições
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]
# Define a URL raiz do projeto
ROOT_URLCONF = "pw2025.urls"
# Configurações de template para renderizar HTML
# Define o backend de template, diretórios de templates, e processadores de contexto
#como?
# Os processadores de contexto adicionam variáveis úteis ao contexto de todos os templates
#só?
# Por exemplo, o processador 'auth' adiciona o objeto 'user' ao contexto
# para que possamos verificar se o usuário está autenticado em nossos templates
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "pw2025.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "postgres",
        "USER": "postgres.nsuexetbmiawccwhgpav",
        "PASSWORD": "Pu2005dim$",
        "HOST": "aws-0-sa-east-1.pooler.supabase.com",
        "PORT": "5432",
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "pt-br"

TIME_ZONE = "America/Sao_Paulo"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [
    BASE_DIR / "static"
]
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGIN_REDIRECT_URL = 'Inicio'
LOGIN_URL = 'Login'
LOGOUT_REDIRECT_URL = 'Login'

